name: üöÄ Provision and Deploy

on:
  push:
    branches:
      - main
      - dev
  pull_request: {}
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}
  NODE_VERSION: 16

jobs:
  validate:
    name: üëç Validate Build

    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: ‚éî Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1

      - name: üë∑ Build
        run: npm run build

  # provision:
  #   name: ‚òÅÔ∏è Provision
  #   if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
  #   runs-on: ubuntu-latest
  #   needs: [validate]
  #   container:
  #     image: mcr.microsoft.com/azure-dev-cli-apps:latest

  #   steps:
  #     - name: ‚¨áÔ∏è Checkout repo
  #       uses: actions/checkout@v3

  #     - name: üîì Log in with Azure (Client Credentials)
  #       if: ${{ env.AZURE_CREDENTIALS != '' }}
  #       run: |
  #         $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
  #         Write-Host "::add-mask::$($info.clientSecret)"
  #         azd login `
  #           --client-id "$($info.clientId)" `
  #           --client-secret "$($info.clientSecret)" `
  #           --tenant-id "$($info.tenantId)"
  #       shell: pwsh
  #       env:
  #         AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: ‚òÅÔ∏è Azure Dev Provision
  #       run: azd provision --no-prompt
  #       env:
  #         AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
  #         AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
  #         AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

  deploy:
    name: üöÄ Deploy
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    runs-on: macos-latest
    # needs: [provision]
    container:
      image: mcr.microsoft.com/azure-dev-cli-apps:latest

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      # - name: üîì Log in with Azure (Client Credentials)
      #   if: ${{ env.AZURE_CREDENTIALS != '' }}
      #   run: |
      #     $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
      #     Write-Host "::add-mask::$($info.clientSecret)"
      #     azd login `
      #       --client-id "$($info.clientId)" `
      #       --client-secret "$($info.clientSecret)" `
      #       --tenant-id "$($info.tenantId)"
      #   shell: pwsh
      #   env:
      #     AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      #     - name: üöÄ Azure Dev Deploy
      #       run: azd deploy --no-prompt
      #       env:
      #         AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      #         AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      #         AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v0
        with:
          appSourcePath: ${{ github.workspace }}
          resourceGroup: rg-remix
          containerAppName: ca-web-agtw7uioiu2do
          acrName: cragtw7uioiu2do
