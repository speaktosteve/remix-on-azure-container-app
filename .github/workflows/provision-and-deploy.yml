on:
  push:
    branches:
      - main

name: üöÄ Provision and Deploy

jobs:
  createVersion:
    name: Create Version
    outputs:
      pkgVersion: ${{ steps.get-version.outputs.pkg-version }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3
      - run: npx semantic-release --branches main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Export version
        id: get-version
        run: |
          PKG_VERSION=$(npm pkg get version)
          echo "pkgVersion={$PKG_VERSION#v}" >> $GITHUB_OUTPUT

      - name: Bump version and push tag
        uses: laputansoft/github-tag-action@v4.6
        with:
          release_branches: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.package-version.outputs.version }}

  deploy:
    name: Deploy
    needs: createVersion
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - env:
          PKG_VERSION: "cragtw7uioiu2do.azurecr.io/remix-amd:latest"
        run: echo "$PKG_VERSION"

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.PKG_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp up \
             --name ca-web-agtw7uioiu2do \
             --image $PKG_VERSION \
             --ingress external \
             --target-port 3000
